{"version":3,"sources":["helper/invert-color.ts","helper/random-color.ts","../../src/index.tsx","index.example.tsx","index.document-scrolled-example.tsx","App.tsx","index.tsx"],"names":["padZero","str","len","zeros","Array","join","slice","invertColor","hex","bw","indexOf","length","Error","r","parseInt","g","b","toString","rainbow","numOfSteps","step","h","i","f","q","ReactScrollified","isLoading","page","childrenCount","loadCount","componentDidUpdate","React","this","props","prevProps","handleIntersection","event","state","render","options","onChange","bind","className","externalListWrapperClassName","id","style","scrollDirection","overflowX","overflowY","scrolledDiv","height","hasMore","Component","loader","width","textAlign","ExampleComponent","useState","items","setItems","containerBackgroundColor","setContainerBackgroundColor","useEffect","loadMore","offset","console","log","newData","start","stop","Math","ceil","fill","map","x","y","range","setTimeout","maxWidth","margin","borderRadius","border","padding","fontSize","background","item","index","boxColor","display","justifyContent","boxShadow","cursor","key","onClick","flexDirection","generateBox","DocumentScrolledExampleComponent","App","currentExample","setCurrentExample","currentExampleSelected","exampleType","Layout","href","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4d68f28d.chunk.js","sourcesContent":["export const padZero = (str: string, len = 2) => {\n  len = len || 2\n  var zeros = new Array(len).join('0')\n  return (zeros + str).slice(-len)\n}\n\nexport const invertColor = (hex: string, bw: any = false) => {\n  if (hex.indexOf('#') === 0) {\n    hex = hex.slice(1)\n  }\n  // convert 3-digit hex to 6-digits.\n  if (hex.length === 3) {\n    hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2]\n  }\n  if (hex.length !== 6) {\n    throw new Error('Invalid HEX color.')\n  }\n  let r: any = parseInt(hex.slice(0, 2), 16),\n    g: any = parseInt(hex.slice(2, 4), 16),\n    b: any = parseInt(hex.slice(4, 6), 16)\n  if (bw) {\n    // http://stackoverflow.com/a/3943023/112731\n    return (r * 0.299 + g * 0.587 + b * 0.114) > 186\n      ? '#000000'\n      : '#FFFFFF'\n  }\n  // invert color components\n  r = (255 - r).toString(16)\n  g = (255 - g).toString(16)\n  b = (255 - b).toString(16)\n  // pad each with zeros and return\n  return '#' + padZero(r) + padZero(g) + padZero(b)\n}\n","export const rainbow = (numOfSteps:number, step:number) => {\n  // This function generates vibrant, \"evenly spaced\" colours (i.e. no clustering). This is ideal for creating easily distinguishable vibrant markers in Google Maps and other apps.\n  // Adam Cole, 2011-Sept-14\n  // HSV to RBG adapted from: http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n  let r, g, b;\n  let h = step / numOfSteps;\n  let i = ~~(h * 6);\n  let f = h * 6 - i;\n  let q = 1 - f;\n  switch(i % 6){\n    case 0: r = 1; g = f; b = 0; break;\n    case 1: r = q; g = 1; b = 0; break;\n    case 2: r = 0; g = 1; b = f; break;\n    case 3: r = 0; g = q; b = 1; break;\n    case 4: r = f; g = 0; b = 1; break;\n    case 5: r = 1; g = 0; b = q; break;\n  }\n  // @ts-ignore\n  let c = \"#\" + (\"00\" + (~ ~(r * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(g * 255)).toString(16)).slice(-2) + (\"00\" + (~ ~(b * 255)).toString(16)).slice(-2);\n  return (c);\n}\n","import React from 'react'\nimport 'intersection-observer' // optional polyfill\nimport Observer from '@researchgate/react-intersection-observer'\n\ninterface ReactScrollifiedProps {\n  loader: React.ReactNode\n  hasMore: boolean\n  offset?: number\n  scrolledDiv?: string\n  loadMore: (page: number) => void\n  scrollDirection?: 'vertical' | 'horizontal'\n  externalListWrapperClassName?: string\n}\n\ninterface ReactScrollifiedState {\n  page: number\n  childrenCount: number\n  loadCount: number\n  isLoading: boolean\n}\n\nclass ReactScrollified extends React.Component<ReactScrollifiedProps, ReactScrollifiedState> {\n  private isLoading: boolean = false\n\n  constructor(props: ReactScrollifiedProps) {\n    super(props)\n    this.state = {\n      page: 0,\n      childrenCount: 0,\n      loadCount: 0,\n      isLoading: false\n    }\n  }\n\n  componentDidUpdate(prevProps: Readonly<any>) {\n    if (\n      React.Children.count(this.props.children) !==\n      React.Children.count(prevProps.children)\n    ) {\n      this.isLoading = false\n    }\n  }\n\n  handleIntersection(event: any) {\n    // console.log(event.isIntersecting, 'current page -> ', this.state.page)\n    if (event.isIntersecting && this.props.hasMore && !this.isLoading) {\n      this.isLoading = true\n      this.setState(\n        {\n          page: this.state.page + 1,\n          loadCount: this.state.loadCount + 1\n        },\n        () => {\n          this.props.loadMore(this.state.page - 1)\n        }\n      )\n    }\n  }\n\n  //    height: 100%;\n  //     max-height: 100%;\n  //     overflow-y: scroll;\n  render() {\n    let options: { onChange: any, root?: any } = { onChange: this.handleIntersection.bind(this) }\n    this.props.scrolledDiv ? options.root = '#rsc-container' : null\n    // this.props.scrolledDiv ? options['root'] = this.props.scrolledDiv.charAt(0) === '#' ? this.props.scrolledDiv : '#' + this.props.scrolledDiv : null\n    // console.log('scrolled div?', this.props.scrolledDiv)\n    // console.log('options?', options)\n    const containerHeight = '100%' // window.innerHeight\n    const className = this.props.externalListWrapperClassName ? this.props.externalListWrapperClassName : 'rsc-container'\n    return (\n      <div\n        id='rsc-container'\n        className={className}\n        style={\n          this.props.scrollDirection === 'horizontal'\n            ? { overflowX: 'scroll' }\n            : {\n              overflowY: this.props.scrolledDiv ? 'scroll' : 'auto',\n              height: containerHeight\n            }\n        }\n      >\n        {this.props.children}\n        <Observer {...options}>\n          {this.props.hasMore ?\n            <div className='rsc-loader-wrapper'>{this.props.loader}</div>\n            : null\n          }\n        </Observer>\n      </div>\n    )\n  }\n}\n\nexport default ReactScrollified\n","import * as React from 'react'\nimport { useEffect, useState } from 'react'\nimport { invertColor } from './helper/invert-color'\nimport { rainbow } from './helper/random-color'\nimport ReactScrollified from 'react-scrollified'\n\n\nconst loader = <div style={{ width: '100%', textAlign: 'center' }}>Loading...</div>\n\nconst range = (start: number, stop: number, step = 1) =>\n  Array(Math.ceil((stop - start) / step))\n    .fill(start)\n    .map((x, y) => x + y * step)\n\nexport const ExampleComponent = () => {\n  const [items, setItems] = useState<any>([])\n  const [containerBackgroundColor, setContainerBackgroundColor] = useState<any>('#fff')\n  useEffect(() => {\n    loadMore(0)\n  }, [])\n\n  const loadMore = (page: number) => {\n    const limit = 30\n    const offset = page * limit\n    console.log('load more', page)\n    const newData = range(offset, offset + limit)\n    setTimeout(() => {\n      setItems([...items, ...newData])\n    }, 400)\n  }\n  const generateBox: (item: number, index: number) => JSX.Element = (index: number, item: number) => {\n    const boxColor = rainbow(1618, index * 10)\n    return (\n      <div style={{\n        height: '168px',\n        width: '168px',\n        display: 'inline-flex',\n        justifyContent: 'flex-start',\n        margin: '1rem',\n        padding: '1rem',\n        borderRadius: '29% 71% 70% 30% / 32% 35% 65% 68% ',\n        boxShadow: `inset 0 0 7px ${invertColor(boxColor)}`,\n        background: boxColor,\n        textAlign: 'left',\n        cursor: 'pointer'\n      }}\n           key={index}\n           onClick={() => setContainerBackgroundColor(boxColor)}\n      >\n              <span\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'center',\n                  textAlign: 'center',\n                  width: '100%'\n                }}>{item}\n              </span>\n      </div>\n    )\n  }\n  return (\n    <div\n      id=\"scrolled-window\"\n\n      style={{\n        height: '500px',\n        maxWidth: '1000px',\n        textAlign: 'center',\n        margin: '2.5em auto',\n        borderRadius: '37.25px 37.25px 37.25px 37.25px',\n        border: `3px solid ${invertColor(containerBackgroundColor)}`,\n        padding: '0.5em',\n        fontSize: '2em',\n        background: containerBackgroundColor\n      }}>\n      <ReactScrollified\n        scrolledDiv=\"scrolled-window\"\n        hasMore={true}\n        loader={loader}\n        externalListWrapperClassName={'list-wrapper'}\n        loadMore={(page: number) => loadMore(page)}>\n        {items.map((item: any, index: any) => {\n            return (generateBox(item, index))\n          }\n        )}\n      </ReactScrollified>\n    </div>\n  )\n}\n","import * as React from 'react'\nimport { useEffect, useState } from 'react'\nimport { invertColor } from './helper/invert-color'\nimport { rainbow } from './helper/random-color'\nimport ReactScrollified from 'react-scrollified'\n\n\nconst loader = <div style={{ width: '100%', textAlign: 'center' }}>Loading...</div>\n\nconst range = (start: number, stop: number, step = 1) =>\n  Array(Math.ceil((stop - start) / step))\n    .fill(start)\n    .map((x, y) => x + y * step)\n\nexport const DocumentScrolledExampleComponent = () => {\n  const [items, setItems] = useState<any>([])\n  const [containerBackgroundColor, setContainerBackgroundColor] = useState<any>('#fff')\n  useEffect(() => {\n    loadMore(0)\n  }, [])\n\n  const loadMore = ((page: number) => {\n    const limit = 40\n    const offset = page * limit\n    console.log('load more', page)\n    const newData = range(offset, offset + limit)\n    setTimeout(() => {\n      setItems([...items, ...newData])\n    }, 400)\n  })\n  const generateBox: (item: number, index: number) => JSX.Element = (index: number, item: number) => {\n    const boxColor = rainbow(1618, index * 10)\n    return (\n      <div style={{\n        height: '168px',\n        width: '168px',\n        display: 'inline-flex',\n        justifyContent: 'flex-start',\n        margin: '1rem',\n        padding: '1rem',\n        borderRadius: '29% 71% 70% 30% / 32% 35% 65% 68% ',\n        boxShadow: `inset 0 0 7px ${invertColor(boxColor)}`,\n        background: boxColor,\n        textAlign: 'left',\n        cursor: 'pointer'\n      }}\n           key={index}\n           onClick={() => setContainerBackgroundColor(boxColor)}\n      >\n              <span\n                style={{\n                  display: 'flex',\n                  flexDirection: 'column',\n                  justifyContent: 'center',\n                  textAlign: 'center',\n                  width: '100%'\n                }}>{item}\n              </span>\n      </div>\n    )\n  }\n  return (\n    <div style={{\n      textAlign: 'center',\n      border: `2px solid ${invertColor(containerBackgroundColor)}`,\n      fontSize: '2em',\n      background: containerBackgroundColor\n    }}>\n      <ReactScrollified\n        hasMore={items.length < 280}\n        loader={loader}\n        externalListWrapperClassName={'list-wrapper'}\n        loadMore={(page: number) => loadMore(page)}>\n        {items.map((item: any, index: any) => {\n            return (generateBox(item, index))\n          }\n        )}\n      </ReactScrollified>\n    </div>\n  )\n}\n","import React, { useState } from 'react'\nimport './App.css'\nimport 'react-scrollified/dist/index.css'\nimport { ExampleComponent } from './index.example'\nimport { DocumentScrolledExampleComponent } from './index.document-scrolled-example'\n\ntype ExampleMode = 'doc' | 'custom';\nconst App = () => {\n  const [currentExample, setCurrentExample] = useState<ExampleMode>('doc')\n  const currentExampleSelected = (exampleType: ExampleMode) => {\n    setCurrentExample(exampleType)\n  }\n  const Layout = () => {\n    return (\n      <div>\n        <div className=\"menu\">\n          <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'center' }}><a href=\"https://github.com/iscotzan/react-scrollified\">GitHub</a></div>\n          <button className={currentExample === 'doc' ? 'example-button selected' : 'example-button'}\n                  onClick={() => currentExampleSelected('doc')}>Document as root example\n          </button>\n          <button className={currentExample === 'custom' ? 'example-button selected' : 'example-button'}\n                  onClick={() => currentExampleSelected('custom')}>Custom root example\n          </button>\n        </div>\n        <div className=\"main\">\n          {currentExample === 'custom' ?\n            <ExampleComponent/>\n            :\n            <DocumentScrolledExampleComponent/>\n          }\n        </div>\n      </div>\n    )\n  }\n  // return <DocumentScrolledExampleComponent/>\n  return <Layout/>\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}